name: Deploy

on:
  push:
    branches:
      - main

jobs:
  pr-checks:
    runs-on: self-hosted
    permissions:
      id-token: write 
      contents: read
      
    steps:
      - name: Checkout repository code 
        uses: actions/checkout@v3
        
      - uses: actions/setup-node@v3
        name: setup node
        with:
          node-version: 18
          
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          role-to-assume: "arn:aws:iam::609683150604:role/oidcrolegithub"
          role-session-name: aws-terraform-state-session
          aws-region: "eu-west-1"      
      
      - uses: hashicorp/setup-terraform@v2
        name: Setup Terraform
        with: 
          terraform_version: 1.4.6
          
      - name: Terraform Init
        run: |
          terraform init -backend-config backend-config-test.tfvars
      - name: Terraform Validate
        run: |
          terraform validate

      - name: Terraform format check
        run: |
          terraform fmt -check

      - name: Terraform Plan
        env:
          repo_url: "https://github.com/VivaanG1/vpc-network"
          github_runner_token: "A7MYWESVMHQ6DNCAUXYPQOTE3PMKC"
          runner_name: "myrunnertotest"
        run: |
          terraform plan \
            -var "github_runner_token=${{ env.github_runner_token }}" \
            -var "runner_name=${{ env.runner_name }}" \
            -var "repo_url=${{ env.repo_url }}"

      - name: Terraform Deploy
        env:
          repo_url: "https://github.com/VivaanG1/vpc-network"
          github_runner_token: "A7MYWEXLWAQ2WTYAMMG63ALE3P53A"
          runner_name: "vivaan-2"
        run: |
          terraform apply -auto-approve \
            -var "github_runner_token=${{ env.github_runner_token }}" \
            -var "runner_name=${{ env.runner_name }}" \
            -var "repo_url=${{ env.repo_url }}"